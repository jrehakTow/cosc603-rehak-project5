package edu.towson.cis.cosc603.project5.coffeemaker;

import junit.framework.TestCase;

/**
 * The class <code>InventoryTest</code> contains tests for the class {@link
 * <code>Inventory</code>}
 *
 * @pattern JUnit Test Case
 *
 * @generatedBy CodePro at 4/27/16 8:57 PM
 *
 * @author rehakjc
 *
 * @version $Revision$
 */
public class InventoryTest extends TestCase {
	private CoffeeMaker cm;
	private Inventory i;
	private Recipe r1;
	
	int amtCoffee;
	int amtMilk;
	int amtSugar;
	int amtChocolate;

	/**
	 * Perform pre-test initialization
	 *
	 * @throws Exception
	 *
	 * @see TestCase#setUp()
	 */
	protected void setUp(){
		cm = new CoffeeMaker();
		i = cm.checkInventory();

		r1 = new Recipe();
		r1.setName("Coffee");
		r1.setPrice(50);
		r1.setAmtCoffee(3);
		r1.setAmtMilk(1);
		r1.setAmtSugar(1);
		r1.setAmtChocolate(0);
		
		amtCoffee = 15;
		amtMilk = 10;
		amtSugar = 12;
		amtChocolate = 20;
	}

	/**
	 * Perform post-test clean up
	 *
	 * @throws Exception
	 *
	 * @see TestCase#tearDown()
	 */
	protected void tearDown() throws Exception {
		cm = null;
		i = null;
		r1 = null;
	}

	/**
	 * Run the boolean enoughIngredients(Recipe) method test
	 */
	public void testEnoughIngredients() {
		fail("Newly generated method - fix or disable");
		// add test code here
		Inventory fixture = new Inventory();
		Recipe r = null;
		boolean result = fixture.enoughIngredients(r);
		assertTrue(false);
	}

	/**
	 * Run the int getChocolate() method test
	 */
	public void testGetChocolate() {
		fail("Newly generated method - fix or disable");
		// add test code here
		Inventory fixture = new Inventory();
		int result = fixture.getChocolate();
		assertTrue(false);
	}

	/**
	 * Run the int getCoffee() method test
	 */
	public void testGetCoffee() {
		fail("Newly generated method - fix or disable");
		// add test code here
		Inventory fixture = new Inventory();
		int result = fixture.getCoffee();
		assertTrue(false);
	}

	/**
	 * Run the int getMilk() method test
	 */
	public void testGetMilk() {
		fail("Newly generated method - fix or disable");
		// add test code here
		Inventory fixture = new Inventory();
		int result = fixture.getMilk();
		assertTrue(false);
	}

	/**
	 * Run the int getSugar() method test
	 */
	public void testGetSugar() {
		fail("Newly generated method - fix or disable");
		// add test code here
		Inventory fixture = new Inventory();
		int result = fixture.getSugar();
		assertTrue(false);
	}

	/**
	 * Run the void setChocolate(int) method test
	 */
	public void testSetChocolate() {
		fail("Newly generated method - fix or disable");
		// add test code here
		Inventory fixture = new Inventory();
		int chocolate = 0;
		fixture.setChocolate(chocolate);
		assertTrue(false);
	}

	/**
	 * Run the void setCoffee(int) method test
	 */
	public void testSetCoffee() {
		i.setCoffee(0);
		assertEquals(0, i.getCoffee());
		
		
		i.setSugar(0);
		//assertEquals(0, i.getSugar());
		i.setChocolate(0);
		//assertEquals(0, i.getChocolate());
	}
	
	public void testSetCoffee1(){ //test greater than 0
		i.setCoffee(1);
		assertEquals(1, i.getCoffee());
	}
	
	public void testSetCoffee2(){
		i.setCoffee(-1);
		assertEquals(0, i.getCoffee());
	}

	/**
	 * Run the void setMilk(int) method test
	 */
	public void testSetMilk(){
		i.setMilk(0);
		assertEquals(0, i.getMilk());
	}
	
	public void testSetMilk()1{
		i.setMilk(1);
		assertEquals(1, i.getMilk());
	}
	
	public void testSetMilk()2 {
		i.setMilk(-1);
		assertEquals(0, i.getMilk());
	}

	/**
	 * Run the void setSugar(int) method test
	 */
	public void testSetSugar() {
		fail("Newly generated method - fix or disable");
		// add test code here
		Inventory fixture = new Inventory();
		int sugar = 0;
		fixture.setSugar(sugar);
		assertTrue(false);
	}

	/**
	 * Run the String toString() method test
	 */
	public void testToString() {
		fail("Newly generated method - fix or disable");
		// add test code here
		Inventory fixture = new Inventory();
		String result = fixture.toString();
		assertTrue(false);
	}
}

/*$CPS$ This comment was generated by CodePro. Do not edit it.
 * patternId = com.instantiations.assist.eclipse.pattern.testCasePattern
 * strategyId = com.instantiations.assist.eclipse.pattern.testCasePattern.junitTestCase
 * additionalTestNames = 
 * assertTrue = false
 * callTestMethod = true
 * createMain = false
 * createSetUp = true
 * createTearDown = true
 * createTestFixture = false
 * createTestStubs = false
 * methods = enoughIngredients(QRecipe;),getChocolate(),getCoffee(),getMilk(),getSugar(),setChocolate(I),setCoffee(I),setMilk(I),setSugar(I),toString()
 * package = edu.towson.cis.cosc603.project5.coffeemaker
 * package.sourceFolder = CoffeeMaker/src
 * superclassType = junit.framework.TestCase
 * testCase = InventoryTest
 * testClassType = edu.towson.cis.cosc603.project5.coffeemaker.Inventory
 */